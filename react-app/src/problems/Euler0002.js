import React from 'react';
import ProblemCard from '../ProblemCard';


class Euler0002 extends React.Component{

	constructor(props) {
		super(props);
		this.state = { answer: "?" };
		this.onSolve = this.onSolve.bind(this);
		this.getEvenFibonacciNumbers = this.getEvenFibonacciNumbers.bind(this);
	}

	onSolve() {

		var numbers = this.getEvenFibonacciNumbers(4000000);
		var total = 0;
		numbers.forEach(num => {
			total += num;
		})
		return total;
	}

	getEvenFibonacciNumbers(max_num) {
		var even_numbers = [2];
		var cur_num = 2;
		var prev_num = 1;
		while(cur_num < max_num) {
			var next_num = cur_num + prev_num;
			prev_num = cur_num;
			cur_num = next_num;
			if (cur_num%2 === 0) {
				even_numbers.push(cur_num);
			}
		}
		return even_numbers;
	}


	render() {

		var problem_statement_1 = "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:";
		var problem_statement_2 ="1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...";
		var problem_statement_3 ="By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.";
		return (
			<ProblemCard
				problem_statements={[problem_statement_1, problem_statement_2, problem_statement_3]}
				onSolve={this.onSolve}
			/>
		);
	}
}

export default Euler0002;
